/*
Copyright 2015, 2016 OpenMarket Ltd

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

/* a word of explanation about the flex-shrink values employed here:
   there are 3 priotized categories of screen real-estate grabbing,
   each with a flex-shrink difference of 4 order of magnitude,
   so they ideally wouldn't affect each other.
   lowest category: .mx_RoomSubList
        flex:-shrink: 10000000
        distribute size of items within the same categery by their size
   middle category: .mx_RoomSubList.resized-sized
        flex:-shrink: 1000
        applied when using the resizer, will have a max-height set to it,
        to limit the size
   highest category: .mx_RoomSubList.resized-all
        flex:-shrink: 1
        small flex-shrink value (1), is only added if you can drag the resizer so far
        so in practice you can only assign this category if there is enough space.
*/

.mx_RoomSubList {
    min-height: 31px;
    flex: 0 100000000 auto;
    display: flex;
    flex-direction: column;
}

.mx_RoomSubList_nonEmpty {
    min-height: 76px;

    .mx_AutoHideScrollbar_offset {
        padding-bottom: 4px;
    }
}

.mx_RoomSubList_hidden {
    flex: none !important;
}

.mx_RoomSubList.resized-all {
    flex: 0 1 auto;
}

.mx_RoomSubList.resized-sized {
    /*  resizer set max-height on resized-sized,
        so that limits the height and hence
        needs a very small flex-shrink */
    flex: 0 10000 auto;
}

.mx_RoomSubList_labelContainer {
    display: flex;
    flex-direction: row;
    align-items: center;
    flex: 0 0 auto;
    margin: 0 16px;
    height: 36px;
}

.mx_RoomSubList_label {
    flex: 1;
    cursor: pointer;
    display: flex;
    align-items: center;
    padding: 0 6px;
}

.mx_RoomSubList_label > span {
    flex: 1 1 auto;
    text-transform: uppercase;
    color: $roomsublist-label-fg-color;
    font-weight: 700;
    font-size: 12px;
    margin-left: 8px;
}

.mx_RoomSubList_badge {
    flex: 0 0 auto;
    border-radius: 8px;
    color: $accent-fg-color;
    font-weight: 600;
    font-size: 12px;
    padding: 0 5px;
    background-color: $accent-color;
}

.mx_RoomSubList_addRoom, .mx_RoomSubList_badge {
    margin-left: 7px;
}

.mx_RoomSubList_addRoom {
    background-color: $roomheader-addroom-color;
    color: $roomsublist-background;
    background-image: url('../../img/icons-room-add.svg');
    background-repeat: no-repeat;
    background-position: center;
    border-radius: 10px; // 16/2 + 2 padding
    height: 16px;
    flex: 0 0 16px;
    background-clip: content-box;
}

.mx_RoomSubList_badgeHighlight {
    background-color: $warning-color;
}

.mx_RoomSubList_chevron {
    pointer-events: none;
    background-image: url('../../img/topleft-chevron.svg');
    background-repeat: no-repeat;
    transition: transform 0.2s ease-in;
    width: 10px;
    height: 10px;
    background-position: center;
    margin-left: 2px;
}

.mx_RoomSubList_chevronDown {
    transform: rotateZ(0deg);
}

.mx_RoomSubList_chevronUp {
    transform: rotateZ(180deg);
}

.mx_RoomSubList_chevronRight {
    transform: rotateZ(-90deg);
}

.mx_RoomSubList_scroll {
    /* let rooms list grab as much space as it needs (auto),
       potentially overflowing and showing a scrollbar */
    flex: 0 1 auto;
    padding: 0 8px;
}

// overflow indicators
.mx_RoomSubList:not(.resized-all) > .mx_RoomSubList_scroll {
    &.mx_IndicatorScrollbar_topOverflow::before,
    &.mx_IndicatorScrollbar_bottomOverflow::after {
        position: sticky;
        left: 0;
        right: 0;
        height: 40px;
        content: "";
        display: block;
        z-index: 100;
        pointer-events: none;
    }

    &.mx_IndicatorScrollbar_topOverflow > .mx_AutoHideScrollbar_offset {
        margin-top: -40px;
    }
    &.mx_IndicatorScrollbar_bottomOverflow > .mx_AutoHideScrollbar_offset {
        margin-bottom: -40px;
    }

    &.mx_IndicatorScrollbar_topOverflow::before {
        top: 0;
        background: linear-gradient($secondary-accent-color, transparent);
    }

    &.mx_IndicatorScrollbar_bottomOverflow::after {
        bottom: 0;
        background: linear-gradient(transparent, $secondary-accent-color);
    }
}

.collapsed {

    .mx_RoomSubList_scroll {
        padding: 0;
    }

    .mx_RoomSubList_labelContainer {
        margin-right: 14px;
        margin-left: 2px;
    }

    .mx_RoomSubList_addRoom {
        margin-left: 3px;
        margin-right: 10px;
    }

    .mx_RoomSubList_label > span {
        display: none;
    }
}
